import React, { useState } from 'react';
import './SideBar.css';


const Sidebar = ({ 
  selectedFacilityType, 
  onFacilityTypeChange, 
  onRunAnalysis, 
  onGetRecommendations,
  isLoading,
  showHeatmap, 
  setShowHeatmap,
  heatmapIntensity, 
  setHeatmapIntensity,
  showHexagons,
  setShowHexagons,
  hexagonOpacity,
  setHexagonOpacity,
  onHexagonLayerToggle,
  onClearUserFacilities,
  hasUserAddedFacilities
}) => {
  const [activeTab, setActiveTab] = useState('facilities');
  const [showDragHint, setShowDragHint] = useState(true);
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫
  const handleTabChange = (tab) => {
    setActiveTab(tab);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –≥–µ–∫—Å–∞–≥–æ–Ω–æ–≤ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ –¥—Ä—É–≥—É—é –≤–∫–ª–∞–¥–∫—É
    if (tab !== 'hexagons' && showHexagons) {
      setShowHexagons(false);
    }
    
    // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–ª–∏ –≤–∫–ª–∞–¥–∫—É –≥–µ–∫—Å–∞–≥–æ–Ω–æ–≤, –≤—ã–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö
    if (tab === 'hexagons' && onHexagonLayerToggle) {
      onHexagonLayerToggle();
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
  const handleDragStart = (e, type) => {
    e.dataTransfer.setData('facilityType', type);
  };

  const labels = {
    school: "–®–∫–æ–ª—ã",
    hospital: "–ë–æ–ª—å–Ω–∏—Ü—ã",
    clinic: "–ö–ª–∏–Ω–∏–∫–∏",
    kindergarten: "–î–µ—Ç—Å–∫–∏–µ —Å–∞–¥—ã",
    college: "–ö–æ–ª–ª–µ–¥–∂–∏",
    university: "–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—ã",
    fire_station: "–ü–æ–∂–∞—Ä–Ω—ã–µ —Å—Ç–∞–Ω—Ü–∏–∏"
  };

  return (
    <div className="sidebar">
      <h2>–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∞–Ω–∞–ª–∏–∑–∞</h2>
      
      {/* –í–∫–ª–∞–¥–∫–∏ */}
      <div className="sidebar-tabs">
        <button 
          className={`tab-button ${activeTab === 'facilities' ? 'active' : ''}`}
          onClick={() => handleTabChange('facilities')}
        >
          –û–±—ä–µ–∫—Ç—ã –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
        </button>

        <button 
          className={`tab-button ${activeTab === 'hexagons' ? 'active' : ''}`}
          onClick={() => handleTabChange('hexagons')}
        >
          –ì–µ–∫—Å–∞–≥–æ–Ω—ã
        </button>
      </div>
      
      {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∫–ª–∞–¥–∫–∏ –æ–±—ä–µ–∫—Ç–æ–≤ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã */}
      {activeTab === 'facilities' && (
        <div className="tab-content">
          <div className="facility-type-selector">
            <h3>–¢–∏–ø —É—á—Ä–µ–∂–¥–µ–Ω–∏—è</h3>
            
            {showDragHint && (
              <div className="drag-hint-box">
                <div className="drag-hint-icon">üîÑ</div>
                <div className="drag-hint-text">
                  <p>–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∏–∫–æ–Ω–∫—É <span className="drag-icon">+</span> –Ω–∞ –∫–∞—Ä—Ç—É, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç</p>
                </div>
                <button className="drag-hint-close" onClick={() => setShowDragHint(false)}>&times;</button>
              </div>
            )}
            
            {Object.keys(labels).map(type => (
              <div key={type} className="facility-row">
                <div className="facility-radio">
                  <label>
                    <input 
                      type="radio" 
                      name="facilityType" 
                      value={type}
                      checked={selectedFacilityType === type}
                      onChange={() => onFacilityTypeChange(type)}
                    />
                    {labels[type]}
                  </label>
                </div>
                <div 
                  className="facility-drag-button"
                  draggable
                  onDragStart={(e) => handleDragStart(e, type)}
                  title={`–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ ${labels[type].toLowerCase()} –Ω–∞ –∫–∞—Ä—Ç—É`}
                  data-type={type}
                >
                  <span className="drag-icon">+</span>
                </div>
              </div>
            ))}
          </div>
          
          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
          <button 
            className="btn" 
            onClick={onGetRecommendations}
            disabled={isLoading}
          >
            –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
          </button>
          
          {hasUserAddedFacilities && (
            <button 
              className="btn btn-secondary" 
              onClick={onClearUserFacilities}
              style={{ marginTop: '10px' }}
            >
              –û—á–∏—Å—Ç–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
            </button>
          )}
          
          <div className="info-box">
            <h3>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
            <p>
              –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É—á—Ä–µ–∂–¥–µ–Ω–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏–ª–∏ –ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∏–∫–æ–Ω–∫—É "+" –Ω–∞ –∫–∞—Ä—Ç—É, 
              —á—Ç–æ–±—ã —Å–º–æ–¥–µ–ª–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è.
            </p>
            <p>
              –ù–∞–∂–º–∏—Ç–µ "–ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", —á—Ç–æ–±—ã —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª–∞ –¥–∞–Ω–Ω—ã–µ –∏ 
              –ø—Ä–µ–¥–ª–æ–∂–∏–ª–∞ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –º–µ—Å—Ç–∞ –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –Ω–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤.
            </p>
          </div>
        </div>
      )}
      
      {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∫–ª–∞–¥–∫–∏ —Ç–µ–ø–ª–æ–≤–æ–π –∫–∞—Ä—Ç—ã –Ω–∞—Å–µ–ª–µ–Ω–∏—è */}
      {activeTab === 'population' && (
        <div className="tab-content">
          <h3>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</h3>
          
          <div className="heat-control-panel">
            <div className="control-group">
              <label className="checkbox-container">
                <input
                  type="checkbox"
                  checked={showHeatmap}
                  onChange={() => setShowHeatmap(!showHeatmap)}
                />
                <span className="label-text">–ü–æ–∫–∞–∑–∞—Ç—å –ø–ª–æ—Ç–Ω–æ—Å—Ç—å –Ω–∞—Å–µ–ª–µ–Ω–∏—è</span>
              </label>
            </div>
            
            {showHeatmap && (
              <>
                <div className="control-group">
                  <label htmlFor="intensity">–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:</label>
                  <div className="slider-container">
                    <input
                      type="range"
                      id="intensity"
                      min="0"
                      max="100"
                      value={heatmapIntensity}
                      onChange={(e) => setHeatmapIntensity(parseInt(e.target.value))}
                      className="range-slider"
                    />
                    <div className="slider-value">{heatmapIntensity}%</div>
                  </div>
                </div>
                
                <div className="legend-preview">
                  <h4>–õ–µ–≥–µ–Ω–¥–∞:</h4>
                  <div className="heatmap-gradient">
                    <div className="gradient-bar"></div>
                    <div className="gradient-labels">
                      <span>–ù–∏–∑–∫–∞—è</span>
                      <span>–í—ã—Å–æ–∫–∞—è</span>
                    </div>
                  </div>
                </div>
                
                <div className="info-box">
                  <h3>–û –¥–∞–Ω–Ω—ã—Ö</h3>
                  <p>
                    –¢–µ–ø–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø–ª–æ—Ç–Ω–æ—Å—Ç—å –Ω–∞—Å–µ–ª–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö
                    –ø–µ—Ä–µ–ø–∏—Å–∏ –∏ –≥–µ–æ–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞. –ë–æ–ª–µ–µ —Ç—ë–º–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏ 
                    –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç —Ä–∞–π–æ–Ω—ã —Å –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–π –ø–ª–æ—Ç–Ω–æ—Å—Ç—å—é –Ω–∞—Å–µ–ª–µ–Ω–∏—è.
                  </p>
                  <p>
                    –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–±–ª–∞—Å—Ç–µ–π, –≥–¥–µ –¥–æ—Å—Ç—É–ø 
                    –∫ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–µ –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–µ–Ω.
                  </p>
                </div>
              </>
            )}
          </div>
        </div>
      )}
      
      {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∫–ª–∞–¥–∫–∏ –≥–µ–∫—Å–∞–≥–æ–Ω–æ–≤ –Ω–∞—Å–µ–ª–µ–Ω–∏—è */}
      {activeTab === 'hexagons' && (
        <div className="tab-content">
          <h3>–ì–µ–∫—Å–∞–≥–æ–Ω–∞–ª—å–Ω–∞—è –ø–ª–æ—Ç–Ω–æ—Å—Ç—å –Ω–∞—Å–µ–ª–µ–Ω–∏—è</h3>
          
          <div className="heat-control-panel">
            <div className="control-group">
              <label className="checkbox-container">
                <input
                  type="checkbox"
                  checked={showHexagons}
                  onChange={() => {
                    const newValue = !showHexagons;
                    setShowHexagons(newValue); // –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–ø–µ—Ä—å –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Ä–µ–∂–∏–º –≥–µ–∫—Å–∞–≥–æ–Ω–æ–≤
                  }}
                />
                <span className="label-text">–ü–æ–∫–∞–∑–∞—Ç—å –≥–µ–∫—Å–∞–≥–æ–Ω—ã –Ω–∞—Å–µ–ª–µ–Ω–∏—è</span>
              </label>
            </div>
            
            {showHexagons && (
              <>
                <div className="mode-info-box">
                  <p className="mode-info">
                    <i className="info-icon">‚ÑπÔ∏è</i> –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–µ–∂–∏–º–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≥–µ–∫—Å–∞–≥–æ–Ω–æ–≤. –î—Ä—É–≥–∏–µ —Å–ª–æ–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ —Å–∫—Ä—ã—Ç—ã.
                  </p>
                </div>
{/*                 
                <div className="control-group">
                  <label htmlFor="hexOpacity">–ù–µ–ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å:</label>
                  <div className="slider-container">
                    <input
                      type="range"
                      id="hexOpacity"
                      min="10"
                      max="100"
                      value={hexagonOpacity * 100}
                      onChange={(e) => setHexagonOpacity(parseInt(e.target.value) / 100)}
                      className="range-slider"
                    />
                    <div className="slider-value">{Math.round(hexagonOpacity * 100)}%</div>
                  </div>
                </div> */}
                
                
                <div className="info-box">
                  <h4>–û –¥–∞–Ω–Ω—ã—Ö</h4>
                  <p>
                    –ì–µ–∫—Å–∞–≥–æ–Ω–∞–ª—å–Ω–∞—è —Å–µ—Ç–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–ª–æ—Ç–Ω–æ—Å—Ç—å –Ω–∞—Å–µ–ª–µ–Ω–∏—è –ë–∏—à–∫–µ–∫–∞. 
                    –¶–≤–µ—Ç –æ—Ç—Ä–∞–∂–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞—Å–µ–ª–µ–Ω–∏—è: —Å–∏–Ω–∏–π (–Ω–∏–∑–∫–æ–µ), 
                    –∑–µ–ª–µ–Ω—ã–π (—Å—Ä–µ–¥–Ω–µ–µ), –∫—Ä–∞—Å–Ω—ã–π (–≤—ã—Å–æ–∫–æ–µ).
                  </p>
                </div>
              </>
            )}
          </div>
        </div>
      )}
    </div>
  );
};

export default Sidebar;
